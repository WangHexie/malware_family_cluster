import threading
from queue import Queue

from param_search_cluster import train_cluster


def print_param(**kwargs):
    result = train_cluster(**kwargs)
    print(kwargs)
    return result


def worker():
    while True:
        param = q.get()
        print_param(**param)
        q.task_done()


use_limited_thread = False
use_threading = False

params = [{"data_type": 4, "cluster_way": 0, "n_clusters": 210, "dimension_reduction": 3, "n_components": 2800},
          {"data_type": 4, "cluster_way": 0, "n_clusters": 600, "dimension_reduction": 3, "n_components": 2800},
          {"data_type": 4, "cluster_way": 0, "n_clusters": 420, "dimension_reduction": 3, "n_components": 2800}
          ]

if use_threading:
    if use_limited_thread:
        num_worker_threads = 2

        q = Queue()

        for i in range(num_worker_threads):
            t = threading.Thread(target=worker)
            t.daemon = True
            t.start()

        for item in params:
            q.put(item)

        q.join()
    else:
        for param in params:
            threading.Thread(target=print_param, kwargs=param).start()
else:
    for param in params:
        print_param(**param)
